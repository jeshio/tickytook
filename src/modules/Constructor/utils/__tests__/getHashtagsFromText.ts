import getHashtagsFromText from '../getHashtagsFromText';

describe('getHashtagsFromText', () => {
  it('пустой текст', () => {
    expect(getHashtagsFromText('')).toEqual([]);
  });

  it('текст с хэштегами через пробел в конце строки', () => {
    const text = `Я сидел и смотрел, а там пусто #сидел #смотрел #пустота`;
    expect(getHashtagsFromText(text)).toEqual(['сидел', 'смотрел', 'пустота']);
  });

  it('текст с хэштегами как попало в конце строки', () => {
    const text = `Я сидел и смотрел, а там пусто #сидел#смотрел #пустота`;
    expect(getHashtagsFromText(text)).toEqual(['сидел', 'смотрел', 'пустота']);
  });

  it('текст с точкой + хэштеги как попало в конце строки', () => {
    const text = `Я сидел и смотрел, а там пусто. #сидел#смотрел #пустота`;
    expect(getHashtagsFromText(text)).toEqual(['сидел', 'смотрел', 'пустота']);
  });

  it('текст с хэштегами как попало в начале строки', () => {
    const text = `#сидел#смотрел #пустота Я сидел и смотрел, а там пусто`;
    expect(getHashtagsFromText(text)).toEqual(['сидел', 'смотрел', 'пустота']);
  });

  it('текст с хэштегами как попало в конце и начале строки', () => {
    const text = `#сидел#смотрел #пустота Я сидел и смотрел, а там пусто #а #вот#так`;
    expect(getHashtagsFromText(text)).toEqual(['сидел', 'смотрел', 'пустота', 'а', 'вот', 'так']);
  });

  it('текст с хэштегами смешанными со строкой', () => {
    const text = `#Я сидел и #смотрел, а#там пусто`;
    expect(getHashtagsFromText(text)).toEqual(['Я', 'смотрел', 'там']);
  });

  it('текст с хэштегами смешанными со строкой #2', () => {
    const text = `test #dd df`;
    expect(getHashtagsFromText(text)).toEqual(['dd']);
  });

  it('текст с хэштегами смешанными со строкой #3', () => {
    const text = `t #dd f`;
    expect(getHashtagsFromText(text)).toEqual(['dd']);
  });

  it('текст с хэштегами смешанными со строкой + хэштеги в конце строки', () => {
    const text = `#Я сидел и #смотрел, а#там пусто#тест #ещё #один`;
    expect(getHashtagsFromText(text)).toEqual(['Я', 'смотрел', 'там', 'тест', 'ещё', 'один']);
  });

  it('текст с хэштегами смешанными со строкой + хэштеги в конце строки и точка', () => {
    const text = `#Я сидел и #смотрел, а#там пусто#тест #ещё #один.`;
    expect(getHashtagsFromText(text)).toEqual(['Я', 'смотрел', 'там', 'тест', 'ещё', 'один']);
  });

  it('текст с хэштегами смешанными со строкой + хэштеги с дефисами в конце строки', () => {
    const text = `#Я сидел и #смотрел, а#там пусто#тест #ещё-один`;
    expect(getHashtagsFromText(text)).toEqual(['Я', 'смотрел', 'там', 'тест', 'ещё']);
  });

  it('текст + хэштеги с дефисами в конце строки', () => {
    const text = `Я сидел и смотрел, а там пусто#тест #ещё-один`;
    expect(getHashtagsFromText(text)).toEqual(['тест', 'ещё']);
  });

  it('текст с переносами строк, хэштегами смешанными со строкой + хэштеги в конце строки', () => {
    const text = `#Я сидел
    и#смотрел, а#там пусто#тест
    #ещё #один`;
    expect(getHashtagsFromText(text)).toEqual(['Я', 'смотрел', 'там', 'тест', 'ещё', 'один']);
  });
});
